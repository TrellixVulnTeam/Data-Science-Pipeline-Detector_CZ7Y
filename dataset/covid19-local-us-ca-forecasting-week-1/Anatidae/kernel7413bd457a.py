# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load in 

# import numpy as np # linear algebra
# import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

# import os
# for dirname, _, filenames in os.walk('/kaggle/input'):
#     for filename in filenames:
#         print(os.path.join(dirname, filename))

# Any results you write to the current directory are saved as output.

# -*- coding: utf-8 -*-
"""KaggleTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rV0sSw8fMw2DkVnWwzV8_cnfQDYKhz9E
"""
# -*- coding: utf-8 -*-
"""KaggleTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rV0sSw8fMw2DkVnWwzV8_cnfQDYKhz9E
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

from sklearn.linear_model import LinearRegression

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

submission = pd.read_csv("../input/covid19-local-us-ca-forecasting-week-1/ca_submission.csv")
test = pd.read_csv("../input/covid19-local-us-ca-forecasting-week-1/ca_test.csv")
train = pd.read_csv("../input/covid19-local-us-ca-forecasting-week-1/ca_train.csv")

train = train[train.ConfirmedCases>0]

model_1 = LinearRegression()
x1 = np.array(train.Id).reshape(-1,1)
y1 = np.log(train.ConfirmedCases)
model_1.fit(x1,y1)
print("R-squared score : ",model_1.score(x1,y1))

model_2 = LinearRegression()
x2 = np.array(train.ConfirmedCases).reshape(-1,1)
y2 = train.Fatalities
model_2.fit(x2,y2)
print("R-Squared Score= ",model_2.score(x2,y2))

test["Id"] = 50 + test.ForecastId

test["LogConf"] = model_1.predict(np.array(test.Id).reshape(-1,1))
test["ConfirmedCases"] = np.exp(test.LogConf)//1
test["Fatalities"] = model_2.predict(np.array(test.ConfirmedCases).reshape(-1,1))//1

# from google.colab import files

submission.ConfirmedCases = test.ConfirmedCases
submission.Fatalities = test.Fatalities
submission.to_csv("submission.csv", index=False)
# files.download("submission.csv")