# My thanks to Ben Kurtovic <ben.kurtovic@gmail.com> for his code.
# This is blender analyzer
# Simply run it in a directory
# that contains your models
# Python 2.x code is all the way at the bottom


(lambda _, __, ___, ____, _____, ______, _______, ________:
    getattr(
        __import__(True.__class__.__name__[_] + [].__class__.__name__[__]),
        ().__class__.__eq__.__class__.__name__[:__] +
        ().__iter__().__class__.__name__[_:][_____:________]
    )(
        _, (lambda _, __, ___: _(_, __, ___))(
            lambda _, __, ___:
                bytes([___ % __]) + _(_, __, ___ // __) if ___ else
                (lambda: _).__code__.co_lnotab,
            _ << ________,
            (((_____ << _______) + ___) << ((_______ << ______) - (_______ << _)))
            - (((((_ << ____) - _) << ____) - _______) << ((((___ << __) + _) << _____)
            + (((_ << ___) + _)))) + (((((___ << __) + _) << ____) + _______) << ((((___ << __)
            + _) << _____) - _)) - (((_______ << _____) - _______) << ((((___ << __) + _) << _____)
            - (___ << __))) - (((((_ << ____) + _) << _____) + ___) << ((___ << _______) + (___ << _)))
            - (((_ << (((_ << ___) + _))) - _______) << ((___ << _______) - (_ << __)))
            + ((((((_ << ___) + _)) << ___) - _) << ((___ << _______) - (___ << __))) - ((((((_ << ___)
            + _)) << ______) + _______) << ((((___ << __) - _) << _____) + (___ << _)))
            - (((_ << (((_ << ___) + _))) - _______) << ((((___ << __) - _) << _____) - (_ << __)))
            - (((_______ << _____) + _____) << ((((_____ << __) + _) << ____) + (_ << _)))
            + (((((___ << __) + _) << ____) + ___) << ((_____ << ______) + _______)) - ((((((_ << ___)
            + _)) << ___) - _) << ((_____ << ______) - ___)) + (((_______ << _____) - _______) << ((((_____ << __)
            - _) << ____) - _)) - (((((___ << __) + _) << ____) + _____) << (((((_ << ___) + _)) << _____)
            + _____)) + ((((((_ << ___) + _)) << ___) - _) << (((((_ << ___) + _)) << _____) - (_ << __)))
            - ((((((_ << ___) + _)) << ____) + ___) << ((((_ << ____) + _) << ____))) + (((_ << ______)
            + _) << ((_ << ________) + _______)) - (((((___ << __) + _) << _____) - ((___ << __)
            + _)) << ((_ << ________) - _____)) + (((((___ << __) - _) << __) + _) << ((((_ << ____)
            - _) << ____) + ___)) + (((((_____ << __) + _) << ____) + _) << ((_______ << _____)
            + (___ << _))) - (_ << ((_______ << _____) + _____)) + (((_____ << ______) + _) << ((((___ << __)
            + _) << ____) + ___)) + (((((_ << ____) + _) << ____) + _______) << ((((___ << __) + _) << ____)
            - _______)) + (((((_ << ____) - _) << ____) - _______) << ((___ << ______) - _)) - (((((___ << __)
            - _) << __) + _) << ((((___ << __) - _) << ____) + _______)) - (((((___ << __) - _) << ____)
            - _______) << ((((___ << __) - _) << ____) - (_ << __))) + (((_____ << ____)
            - ___) << ((_____ << _____) + ___)) - (((_ << ____) - _) << ((_____ << _____)
            - ___)) + (((((___ << __) + _) << ____) - _) << (((((_ << ___) + _)) << ____)
            - _)) - ((((((_ << ___) + _)) << ____) - ___) << ((((_ << ____) + _) << ___)
            - ___)) + ((((((_ << ___) + _)) << ___) + ___) << ((_ << _______) - ___))
            + ((((((_ << ___) + _)) << ___) - _) << ((_______ << ____) + (_ << __)))
            - (((((___ << __) + _) << ____) - ___) << ((((___ << __) + _) << ___) + _))
            - ((((((_ << ___) + _)) << __) + _) << ((___ << _____) + (_ << _))) + (((___ << ____)
            + _) << ((((___ << __) - _) << ___) + _)) + (((_ << ______) + _) << ((_____ << ____)
            - _)) - (((_ << _____) + _) << (((((_ << ___) + _)) << ___) - _)) - (((___ << _____)
            - _) << ((((_ << ____) - _) << __) + _)) + (((((___ << __) + _) << ___)
            + ___) << ((___ << ____))) + (((___ << ___) + _) << ((_____ << ___) + (_ << _)))
            - ((((((_ << ___) + _)) << ___) + ___) << ((_ << _____) + _)) - ((((((_ << ___)
            + _)) << __) - _) << ((((___ << __) + _) << _))) + (((_____ << __) + _) << (((((_ << ___)
            + _)) << _))) - (_______ << (((___ << __) + _))) + (_____ << _)
        )
    )
)(
    *(lambda _, __, ___: _(_, __, ___))(
        (lambda _, __, ___:
            [__(___[(lambda: _).__code__.co_nlocals])] +
            _(_, __, ___[(lambda _: _).__code__.co_nlocals:]) if ___ else []
        ),
        lambda _: _.__code__.co_argcount,
        (
            lambda _: _,
            lambda _, __: _,
            lambda _, __, ___: _,
            lambda _, __, ___, ____: _,
            lambda _, __, ___, ____, _____: _,
            lambda _, __, ___, ____, _____, ______: _,
            lambda _, __, ___, ____, _____, ______, _______: _,
            lambda _, __, ___, ____, _____, ______, _______, ________: _
        )
    )
)

# This is Python 2.x code that will do the same type of analysis
#(lambda _, __, ___, ____, _____, ______, _______, ________:
#    getattr(
#        __import__(True.__class__.__name__[_] + [].__class__.__name__[__]),
#        ().__class__.__eq__.__class__.__name__[:__] +
#        ().__iter__().__class__.__name__[_____:________]
#    )(
#        _, (lambda _, __, ___: _(_, __, ___))(
#            lambda _, __, ___:
#                chr(___ % __) + _(_, __, ___ // __) if ___ else
#                (lambda: _).func_code.co_lnotab,
#            _ << ________,
#            (((_____ << _______) + ___) << ((_______ << ______) - (_______ << _)))
#            - (((((_ << ____) - _) << ____) - _______) << ((((___ << __) + _) << _____)
#            + (((_ << ___) + _)))) + (((((___ << __) + _) << ____) + _______) << ((((___ << __)
#            + _) << _____) - _)) - (((_______ << _____) - _______) << ((((___ << __) + _) << _____)
#            - (___ << __))) - (((((_ << ____) + _) << _____) + ___) << ((___ << _______) + (___ << _)))
#            - (((_ << (((_ << ___) + _))) - _______) << ((___ << _______) - (_ << __)))
#            + ((((((_ << ___) + _)) << ___) - _) << ((___ << _______) - (___ << __))) - ((((((_ << ___)
#            + _)) << ______) + _______) << ((((___ << __) - _) << _____) + (___ << _)))
#            - (((_ << (((_ << ___) + _))) - _______) << ((((___ << __) - _) << _____) - (_ << __)))
#            - (((_______ << _____) + _____) << ((((_____ << __) + _) << ____) + (_ << _)))
#            + (((((___ << __) + _) << ____) + ___) << ((_____ << ______) + _______)) - ((((((_ << ___)
#            + _)) << ___) - _) << ((_____ << ______) - ___)) + (((_______ << _____) - _______) << ((((_____ << __)
#            - _) << ____) - _)) - (((((___ << __) + _) << ____) + _____) << (((((_ << ___) + _)) << _____)
#            + _____)) + ((((((_ << ___) + _)) << ___) - _) << (((((_ << ___) + _)) << _____) - (_ << __)))
#            - ((((((_ << ___) + _)) << ____) + ___) << ((((_ << ____) + _) << ____))) + (((_ << ______)
#            + _) << ((_ << ________) + _______)) - (((((___ << __) + _) << _____) - ((___ << __)
#            + _)) << ((_ << ________) - _____)) + (((((___ << __) - _) << __) + _) << ((((_ << ____)
#            - _) << ____) + ___)) + (((((_____ << __) + _) << ____) + _) << ((_______ << _____)
#            + (___ << _))) - (_ << ((_______ << _____) + _____)) + (((_____ << ______) + _) << ((((___ << __)
#            + _) << ____) + ___)) + (((((_ << ____) + _) << ____) + _______) << ((((___ << __) + _) << ____)
#            - _______)) + (((((_ << ____) - _) << ____) - _______) << ((___ << ______) - _)) - (((((___ << __)
#            - _) << __) + _) << ((((___ << __) - _) << ____) + _______)) - (((((___ << __) - _) << ____)
#            - _______) << ((((___ << __) - _) << ____) - (_ << __))) + (((_____ << ____)
#            - ___) << ((_____ << _____) + ___)) - (((_ << ____) - _) << ((_____ << _____)
#            - ___)) + (((((___ << __) + _) << ____) - _) << (((((_ << ___) + _)) << ____)
#            - _)) - ((((((_ << ___) + _)) << ____) - ___) << ((((_ << ____) + _) << ___)
#            - ___)) + ((((((_ << ___) + _)) << ___) + ___) << ((_ << _______) - ___))
#            + ((((((_ << ___) + _)) << ___) - _) << ((_______ << ____) + (_ << __)))
#            - (((((___ << __) + _) << ____) - ___) << ((((___ << __) + _) << ___) + _))
#            - ((((((_ << ___) + _)) << __) + _) << ((___ << _____) + (_ << _))) + (((___ << ____)
#            + _) << ((((___ << __) - _) << ___) + _)) + (((_ << ______) + _) << ((_____ << ____)
#            - _)) - (((_ << _____) + _) << (((((_ << ___) + _)) << ___) - _)) - (((___ << _____)
#            - _) << ((((_ << ____) - _) << __) + _)) + (((((___ << __) + _) << ___)
#            + ___) << ((___ << ____))) + (((___ << ___) + _) << ((_____ << ___) + (_ << _)))
#            - ((((((_ << ___) + _)) << ___) + ___) << ((_ << _____) + _)) - ((((((_ << ___)
#            + _)) << __) - _) << ((((___ << __) + _) << _))) + (((_____ << __) + _) << (((((_ << ___)
#            + _)) << _))) - (_______ << (((___ << __) + _))) + (_____ << _)
#        )
#    )
# )(
#    *(lambda _, __, ___: _(_, __, ___))(
#        (lambda _, __, ___:
#            [__(___[(lambda: _).func_code.co_nlocals])] +
#            _(_, __, ___[(lambda _: _).func_code.co_nlocals:]) if ___ else []
#        ),
#        lambda _: _.func_code.co_argcount,
#        (
#            lambda _: _,
#            lambda _, __: _,
#            lambda _, __, ___: _,
#            lambda _, __, ___, ____: _,
#            lambda _, __, ___, ____, _____: _,
#            lambda _, __, ___, ____, _____, ______: _,
#            lambda _, __, ___, ____, _____, ______, _______: _,
#            lambda _, __, ___, ____, _____, ______, _______, ________: _
#        )
#    )
# )
