# Definitely not the most optimal way to get this done
# My thanks to Ben Kurtovic <ben.kurtovic@gmail.com> for his code.

# Scroll all the way down if you are interested in Python 2.x code

(lambda _, __, ___, ____, _____, ______, _______, ________:
    getattr(
        __import__(True.__class__.__name__[_] + [].__class__.__name__[__]),
        ().__class__.__eq__.__class__.__name__[:__] +
        ().__iter__().__class__.__name__[_:][_____:________]
    )(
        _, (lambda _, __, ___: _(_, __, ___))(
            lambda _, __, ___:
                bytes([___ % __]) + _(_, __, ___ // __) if ___ else
                (lambda: _).__code__.co_lnotab,
            _ << ________,
            (((_____ << ______) + _) << ((((___ << __) - _) << _____)
            + ___)) + ((((((_ << ___) + _)) << ______) - _) << ((((___ << __)
            - _) << _____) - (_ << ___))) + (((((___ << __) + _) << ____)
            - _______) << ((((_____ << __) + _) << ____) - _))
            - (((((___ << __) + _) << _____) + (((_ << ___)
            + _))) << ((_____ << ______) + (_ << __))) - (((((___ << __)
            + _) << _____) - (((_ << ___) + _))) << ((_____ << ______)
            - (_ << ___))) + (((___ << ______) + ___) << ((((_____ << __)
            - _) << ____) - _)) - (((___ << ______) - _______) << (((((_ << ___)
            + _)) << _____) + (_ << __))) + (((((_____ << __) - _) << ____)
            + ___) << (((((_ << ___) + _)) << _____) - _______)) - (((((_ << ____)
            + _) << ____) + _______) << ((((_ << ____) + _) << ____) - _))
            - ((((((_ << ___) + _)) << ____) - ___) << ((_ << ________) + _____))
            + (((_____ << ___) + _) << ((_ << ________) - ___)) + (((((_ << ____)
            - _) << ____) - _______) << ((((_ << ____) - _) << ____) - _))
            - (((((_ << ____) + _) << ____) - _______) << ((_______ << _____)
            + (_ << __))) - (((_ << ____) - _) << ((_______ << _____) - ___))
            + (((((_ << ____) - _) << ____) - _____) << ((((___ << __) + _) << ____)
            - _)) - (((_ << _____) + _) << ((___ << ______) + _______))
            - (((_______ << ___) - _) << ((___ << ______) - ___)) + (((((___ << __)
            + _) << ____) - _____) << ((((___ << __) - _) << ____) - _))
            - (((_______ << ___) - _) << ((_____ << _____) + (___ << _)))
            + (((((_ << ___) + _))) << ((_____ << _____) - ___)) + (((_____ << _____)
            + _) << (((((_ << ___) + _)) << ____) - (_ << __))) - (((___ << ___)
            - _) << ((((_ << ____) + _) << ___) - (_ << _))) + ((((((_ << ___)
            + _)) << ____) + ___) << ((((_ << ____) - _) << ___) + (_ << _)))
            + (((_ << ______) + _) << ((_______ << ____) - _)) - (((((___ << __)
            + _) << __) + _) << ((((___ << __) + _) << ___) - _)) - (((___ << ____)
            - _) << ((___ << _____) - _)) - (((___ << _____) - _) << ((((___ << __)
            - _) << ___) - ___)) + (((_______ << ___) - _) << (((((_ << ___)
            + _)) << ___) + _)) + (((_______ << ____) - _) << ((_ << ______)))
            + (_ << ((((_ << ____) - _) << __) + _)) + (___ << ((((___ << __)
            + _) << __))) + (((_______ << ___) + _) << ((_____ << ___)))
            + (((___ << ___) + _) << ((_ << _____) + _)) + (((___ << ___)
            - _) << ((___ << ___) + _)) + (___ << ((_____ << __)))
            + (_ << (((___ << __) + _))) + (_____ << _)
        )
    )
)(
    *(lambda _, __, ___: _(_, __, ___))(
        (lambda _, __, ___:
            [__(___[(lambda: _).__code__.co_nlocals])] +
            _(_, __, ___[(lambda _: _).__code__.co_nlocals:]) if ___ else []
        ),
        lambda _: _.__code__.co_argcount,
        (
            lambda _: _,
            lambda _, __: _,
            lambda _, __, ___: _,
            lambda _, __, ___, ____: _,
            lambda _, __, ___, ____, _____: _,
            lambda _, __, ___, ____, _____, ______: _,
            lambda _, __, ___, ____, _____, ______, _______: _,
            lambda _, __, ___, ____, _____, ______, _______, ________: _
        )
    )
)

# Python 2.x code starts here
#
#(lambda _, __, ___, ____, _____, ______, _______, ________:
#    getattr(
#        __import__(True.__class__.__name__[_] + [].__class__.__name__[__]),
#        ().__class__.__eq__.__class__.__name__[:__] +
#        ().__iter__().__class__.__name__[_____:________]
#    )(
#        _, (lambda _, __, ___: _(_, __, ___))(
#            lambda _, __, ___:
#                chr(___ % __) + _(_, __, ___ // __) if ___ else
#                (lambda: _).func_code.co_lnotab,
#            _ << ________,
#            (((_____ << ______) + _) << ((((___ << __) - _) << _____)
#            + ___)) + ((((((_ << ___) + _)) << ______) - _) << ((((___ << __)
#            - _) << _____) - (_ << ___))) + (((((___ << __) + _) << ____)
#            - _______) << ((((_____ << __) + _) << ____) - _))
#            - (((((___ << __) + _) << _____) + (((_ << ___)
#            + _))) << ((_____ << ______) + (_ << __))) - (((((___ << __)
#            + _) << _____) - (((_ << ___) + _))) << ((_____ << ______)
#            - (_ << ___))) + (((___ << ______) + ___) << ((((_____ << __)
#            - _) << ____) - _)) - (((___ << ______) - _______) << (((((_ << ___)
#            + _)) << _____) + (_ << __))) + (((((_____ << __) - _) << ____)
#            + ___) << (((((_ << ___) + _)) << _____) - _______)) - (((((_ << ____)
#            + _) << ____) + _______) << ((((_ << ____) + _) << ____) - _))
#            - ((((((_ << ___) + _)) << ____) - ___) << ((_ << ________) + _____))
#            + (((_____ << ___) + _) << ((_ << ________) - ___)) + (((((_ << ____)
#            - _) << ____) - _______) << ((((_ << ____) - _) << ____) - _))
#            - (((((_ << ____) + _) << ____) - _______) << ((_______ << _____)
#            + (_ << __))) - (((_ << ____) - _) << ((_______ << _____) - ___))
#            + (((((_ << ____) - _) << ____) - _____) << ((((___ << __) + _) << ____)
#            - _)) - (((_ << _____) + _) << ((___ << ______) + _______))
#            - (((_______ << ___) - _) << ((___ << ______) - ___)) + (((((___ << __)
#            + _) << ____) - _____) << ((((___ << __) - _) << ____) - _))
#            - (((_______ << ___) - _) << ((_____ << _____) + (___ << _)))
#            + (((((_ << ___) + _))) << ((_____ << _____) - ___)) + (((_____ << _____)
#            + _) << (((((_ << ___) + _)) << ____) - (_ << __))) - (((___ << ___)
#            - _) << ((((_ << ____) + _) << ___) - (_ << _))) + ((((((_ << ___)
#            + _)) << ____) + ___) << ((((_ << ____) - _) << ___) + (_ << _)))
#            + (((_ << ______) + _) << ((_______ << ____) - _)) - (((((___ << __)
#            + _) << __) + _) << ((((___ << __) + _) << ___) - _)) - (((___ << ____)
#            - _) << ((___ << _____) - _)) - (((___ << _____) - _) << ((((___ << __)
#            - _) << ___) - ___)) + (((_______ << ___) - _) << (((((_ << ___)
#            + _)) << ___) + _)) + (((_______ << ____) - _) << ((_ << ______)))
#            + (_ << ((((_ << ____) - _) << __) + _)) + (___ << ((((___ << __)
#            + _) << __))) + (((_______ << ___) + _) << ((_____ << ___)))
#            + (((___ << ___) + _) << ((_ << _____) + _)) + (((___ << ___)
#            - _) << ((___ << ___) + _)) + (___ << ((_____ << __)))
#            + (_ << (((___ << __) + _))) + (_____ << _)
#        )
#    )
# )(
#    *(lambda _, __, ___: _(_, __, ___))(
#        (lambda _, __, ___:
#            [__(___[(lambda: _).func_code.co_nlocals])] +
#            _(_, __, ___[(lambda _: _).func_code.co_nlocals:]) if ___ else []
#        ),
#        lambda _: _.func_code.co_argcount,
#        (
#            lambda _: _,
#            lambda _, __: _,
#            lambda _, __, ___: _,
#            lambda _, __, ___, ____: _,
#            lambda _, __, ___, ____, _____: _,
#            lambda _, __, ___, ____, _____, ______: _,
#            lambda _, __, ___, ____, _____, ______, _______: _,
#            lambda _, __, ___, ____, _____, ______, _______, ________: _
#        )
#    )
# )
